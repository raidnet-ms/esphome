substitutions:
  name: ikea-airq
  friendly_name: Ikea air quality
  project_name: raidnet.aq
  project_version: 1.0.0
  log_level: debug

packages:
# Local Common Packages
  board: !include common/board/d1_mini.yaml


i2c: # used by ccs811 and sht3xd
  sda: D2
  scl: D1
#  scan: false

switch:
  - platform: gpio
#    name: wake css811
    entity_category: config
    pin:
      number: D3  
      inverted: true
    id: wake
    restore_mode: ALWAYS_ON # Must be on on boot to retrieve data


uart: # used by pm1006 only rx needed
  rx_pin: D7
  baud_rate: 9600

# Calibrare sensore temperatura
sensor:
  - platform: sht3xd
    update_interval: 5min
#    address: 0x44
    temperature:
      name: "Temperatura"
      id: temp
      filters:
        - calibrate_linear:
#            - 0.0 -> 0.0
            - 24.87 -> 20.6
            - 27.6 -> 21.4
            - 34.1 -> 29.6

    humidity:
      name: "Umidità"
      id: hum
      filters:
        - calibrate_linear:
            - 0.0 -> 0.0
            - 52.20 -> 60

  - platform: ccs811  # esiste il sensore con sensore temperatura 1080h integrato CJMCU-8128 CCS811
#    update_interval: 60s
#    version:
#      name: versione
#    address: 0x5A
    eco2:
      name: "eCO2 Value"
      id: eco2
      filters:
        - median:
        - throttle: 60s
        - heartbeat: 60s
    tvoc:
      name: "Total Volatile Organic Compound"
      id: tvoc
      filters:
        - median:
        - throttle: 60s
        - heartbeat: 60s
    temperature: temp
    humidity: hum
    baseline: 0xBFBD

  # Ikea Vindriktning PM2.5 sensor
  - platform: pm1006
    pm_2_5:
      name: "Particolato PM25"
      filters:
        - sliding_window_moving_average:
            window_size: 60
            send_every: 60
#            send_first_at: 1 #default 1


  - platform: absolute_humidity
    name: "Absolute Humidity"
    temperature: temp
    humidity: hum
  - platform: template
    name: "Dew Point"
    lambda: |-
      return (243.5*(log(id(hum).state/100)+((17.67*id(temp).state)/
      (243.5+id(temp).state)))/(17.67-log(id(hum).state/100)-
      ((17.67*id(temp).state)/(243.5+id(temp).state))));
    unit_of_measurement: °C
    icon: 'mdi:thermometer-alert'

globals:
  - id: iaq_index
    type: int
    restore_value: no
    initial_value: '0'

text_sensor:
  - platform: template
    #device_class: aqi    # not supported yet by esphometext sensor
    #state_class: "measurement"
    name: "Livingroom IAQ"
    icon: "mdi:air-filter"
    lambda: |-
      id(iaq_index) = 0;
      
      /*
       * Transform indoor humidity values to IAQ points according to Indoor Air Quality UK: 
       * http://www.iaquk.org.uk/
       */
      if (id(hum).state < 10 or id(hum).state > 90) {
        id(iaq_index) += 1;
      }
      else if (id(hum).state < 20 or id(hum).state > 80) {
        id(iaq_index) += 2;
      }
      else if (id(hum).state < 30 or id(hum).state > 70) {
        id(iaq_index) += 3;
      }
      else if (id(hum).state < 40 or id(hum).state > 60) {
        id(iaq_index) += 4;
      }
      else if (id(hum).state >= 40 and id(hum).state <= 60) {
        id(iaq_index) += 5;
      }
      
      /*
       * Transform eCO2 values to IAQ points according to Indoor Air Quality UK: 
       * http://www.iaquk.org.uk/
       */
      if (id(eco2).state <= 600) {
        id(iaq_index) += 5;
      }
      else if (id(eco2).state <= 800) {
        id(iaq_index) += 4;
      }
      else if (id(eco2).state <= 1500) {
        id(iaq_index) += 3;
      }
      else if (id(eco2).state <= 1800) {
        id(iaq_index) += 2;
      }
      else if (id(eco2).state > 1800) {
        id(iaq_index) += 1;
      }
      
      /*
       * Transform TVOC values to IAQ points according to German environmental guidelines: 
       * https://www.repcomsrl.com/wp-content/uploads/2017/06/Environmental_Sensing_VOC_Product_Brochure_EN.pdf
       */
      if (id(tvoc).state <= 65) {
        id(iaq_index) += 5;
      }
      else if (id(tvoc).state <= 220) {
        id(iaq_index) += 4;
      }
      else if (id(tvoc).state <= 660) {
        id(iaq_index) += 3;
      }
      else if (id(tvoc).state <= 2200) {
        id(iaq_index) += 2;
      }
      else if (id(tvoc).state > 2200) {
        id(iaq_index) += 1;
      }

      /*
       * Transform IAQ index to human readable text according to Indoor Air Quality UK: 
       * http://www.iaquk.org.uk/
       */
      ESP_LOGD("main", "Current IAQ index %d", id(iaq_index));
      
      if (id(iaq_index) <= 6) {
        return {"Unhealty"};
      }
      else if (id(iaq_index) <= 9) {
        return {"Poor"};
      }
      else if (id(iaq_index) <= 12) {
        return {"Moderate"};
      }
      else if (id(iaq_index) <= 14) {
        return {"Good"};
      }
      else if (id(iaq_index) > 14) {
        return {"Excellent"};
      }
      
      return {};
    update_interval: 60s